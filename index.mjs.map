{"version":3,"file":"index.mjs","sources":["../lib/main.js","../lib/index.js","../lib/regexp.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a regular expression to match a UTF-16 surrogate pair.\n*\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_UTF16_SURROGATE_PAIR = reUtf16SurrogatePair();\n*\n* var bool = RE_UTF16_SURROGATE_PAIR.test( '\\uD800\\uDC00' );\n* // returns true\n*\n* bool = RE_UTF16_SURROGATE_PAIR.test( 'abc\\uD800\\uDC00def' );\n* // returns true\n*\n* bool = RE_UTF16_SURROGATE_PAIR.test( 'abc' );\n* // returns false\n*/\nfunction reUtf16SurrogatePair() {\n\treturn /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/;\n}\n\n\n// EXPORTS //\n\nmodule.exports = reUtf16SurrogatePair;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a regular expression to match a UTF-16 surrogate pair.\n*\n* @module @stdlib/regexp-utf16-surrogate-pair\n*\n* @example\n* var reUtf16SurrogatePair = require( '@stdlib/regexp-utf16-surrogate-pair' );\n*\n* var RE_UTF16_SURROGATE_PAIR = reUtf16SurrogatePair();\n*\n* var bool = RE_UTF16_SURROGATE_PAIR.test( '\\uD800\\uDC00' );\n* // returns true\n*\n* bool = RE_UTF16_SURROGATE_PAIR.test( 'abc\\uD800\\uDC00def' );\n* // returns true\n*\n* bool = RE_UTF16_SURROGATE_PAIR.test( 'abc' );\n* // returns false\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar reUtf16SurrogatePair = require( './main.js' );\nvar REGEXP = require( './regexp.js' );\n\n\n// MAIN //\n\nsetReadOnly( reUtf16SurrogatePair, 'REGEXP', REGEXP );\n\n\n// EXPORTS //\n\nmodule.exports = reUtf16SurrogatePair;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reUtf16SurrogatePair = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Matches a UTF-16 surrogate pair.\n*\n* Regular expression: `/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/`\n*\n* -   `[\\uD800-\\uDBFF]`\n*     -   match a high surrogate\n*\n* -   `[\\uDC00-\\uDFFF]`\n*     -   match a low surrogate\n*\n*\n* @constant\n* @type {RegExp}\n* @default /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/\n*/\nvar RE_UTF16_SURROGATE_PAIR = reUtf16SurrogatePair();\n\n\n// EXPORTS //\n\nmodule.exports = RE_UTF16_SURROGATE_PAIR;\n"],"names":["main","reUtf16SurrogatePair","require$$1","REGEXP","require$$0","lib"],"mappings":";;iHA8CA,IAAAA,EAPA,WACC,MAAO,kCCGRC,EAAAC,EACAC,ECtB2BC,IDoB3BA,EAOAH,EAAA,SAAAE,GAKA,IAAAE,EAAAJ"}